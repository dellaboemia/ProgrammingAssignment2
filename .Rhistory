install.packages("KernSmooth")
library(KernSmooth)
getwd()
x <- 1:4
y <- 2
x + y
x <- c(3, 5, 1, 10, 12, 6)
x[x <= 5] <- 0
x <- c(3, 5, 1, 10, 12, 6)
x[x %in% 1:5] <- 0
x <- c(3, 5, 1, 10, 12, 6)
x[x %in% 1:5] <- 0
x <- c(3, 5, 1, 10, 12, 6)
x[x < 6] == 0
data <- read.csv("hw1_data.csv",header = TRUE, nrows = 3)
dir
data <- read.csv("hw1_data.csv",header = TRUE, nrows = 3)
source(cachematrix.R)
source("cachematrix.R")
source("cachematrix.R")
f <- makeCacheMatrix(matrix( rnorm(3*3,mean=0,sd=1), 3, 3) 
)
f$get()
f$getinverse()
cacheSolve(f)
cacheSolve(f)
f$getinverse()
x <- cacheSolve(f)
x
f$get()
f$set(matrix( rnorm(3*3,mean=0,sd=1), 3, 3) 
)
f$get()
cacheSolve(f)
f <- makeCacheMatrix(matrix( rnorm(3*3,mean=0,sd=1), 3, 3))
f$get()
f$getinverse()
cacheSolve(f)
f$getinverse()
cacheSolve(f)
f$getinverse()
x <- cacheSolve(f)
x
f <- makeCacheMatrix(matrix( rnorm(3*3,mean=0,sd=1), 3, 3))
f$get()
cacheSolve(f)
f <- makeCacheMatrix(matrix( rnorm(3*3,mean=0,sd=1), 3, 3))
f$get()
f$getinverse()
cacheSolve(f)
f$getinverse()
cacheSolve(f)
f$getinverse()
x <- cacheSolve(f)
x
f$set(matrix( rnorm(3*3,mean=0,sd=1), 3, 3)) 
f$getinverse()
f$get()
f$getinverse()
cacheSolve(f)
f$getinverse()
f$getinverse()
cacheSolve(f)
q()
